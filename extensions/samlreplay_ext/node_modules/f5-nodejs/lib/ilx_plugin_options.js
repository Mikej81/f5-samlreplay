/*jshint node:true*/
'use strict';

/**
 * The set of configurable plugin options that are passed to the ILXPlugin constructor.
 *
 * @constructor
 *
 * @property {boolean} handleClientOpen - Enabling this option causes the system to delay
 *   connecting to the server until one of the following occurs: a) the plugin calls
 *   ILXFlow.client.allow, or, b) the plugin writes data to the server via ILXFlow.server.write,
 *   The plugin may read data from the client using ILXFlow.client.on ('data', ...), allowing the
 *   plugin to validate client parameters before either rejecting the client connection, allowing
 *   the connection to the server to proceed, or making a custom load balancing decision. The
 *   default value of this option is false.
 *
 * @property {boolean} handleClientData - This must be enabled to receive data on a flows' client
 *   stream (data from the client). The default value is true. See also ILXFlow.detach. This value
 *   should be disabled if the plugin does not need to inspect or modify data from the client,
 *   resulting in better performance.
 *
 * @property {boolean} handleServerData - This must be enabled to receive data on a flows' server
 *   stream (data from the server). The default value is true. See also ILXFlow.detach. This value
 *   should be disabled if the plugin does not need to inspect or modify data from the server,
 *   resulting in better performance.
 *
 * @property {boolean} handleClientRequest - This option is applicable if the virtual server has
 *   an HTTP profile. This option enables the capability to a) receive and inspect client HTTP
 *   request headers, and b) replace the client request transaction (headers, body or both). The
 *   default value is true. To manage an HTTP client request the virtual server must be configure
 *   with ILX and HTTP profiles. See also ILXStream#requestStart.
 *
 * @property {boolean} handleServerResponse - This option is applicable if the virtual server has
 *   an HTTP profile. This option enables the capability to a) receive and inspect client HTTP
 *   response headers, and b) replace the server response transaction (headers, body or both). The
 *   default value is true. To manage an HTTP server response the virtual server must be configure
 *   with ILX and HTTP profiles. See also ILXStream#responseStart.
 *
 * @property (array)   disableServer - Disable the socket ILXFlow.server. This is useful if
 *   the plugin will only interact with the client or the plugin is started with
 *   ILXPlugin.startHttpServer. Note that this will automatically enable handleClientOpen.
 *
 */
function ILXPluginOptions ()
{
    this.handleClientOpen = false;
    this.handleClientData = true;
    this.handleServerData = true;
    this.disableServer = false;

    this.handleClientRequest = true;
    this.handleServerResponse = true;
}

module.exports = ILXPluginOptions;
