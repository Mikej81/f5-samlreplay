/*jshint node:true*/
'use strict';

var http = require('http');
var util = require('util');
var ILXStream = require('./ilx_stream.js');

/**
 * Helper function that creates an ILXStream socket to a host using the specified options. For a
 * list of options that the ILXHttpRequest object will use to connect to the host see the
 * ILXStream.connect documentation.
 */
function createConnection(options)
{
    if (options.ilxStream !== undefined) {
        return options.ilxStream; // connection already created
    }

    var stream = new ILXStream();
    stream.connect(options);
    // note that it is not necessary to handle a stream error event here, see _http_client.js,
    // the socketErrorListener function handles that and also calls socket.destroy().
    return stream;
}

/**
 * An ILXHttpRequest object is a wrapper around the node http.ClientRequest object.
 * An ILXHttpRequest object uses an ILXStream as the socket connection. The ILXStream object
 * will connect to the server through the BigIP TMM stack and not through the Linux TCP stack.
 *
 * @constructor
 * @param {object} options - See the documentation for Node.js http.request(). For a list of
 *   options that the ILXHttpRequest object will use to connect to the host see the
 *   ILXStream.connect documentation. To use an existing ILXStream object assign the existing
 *   stream object to options.ilxStream.
 *
 * @param {function} responseCallback - See the documentation for the Node.js http.request().
 */
function ILXHttpRequest(options, responseCallback)
{
    if (options.createConnection === undefined) {
        options.createConnection = createConnection;
    }
    http.ClientRequest.call(this, options, responseCallback);
}
util.inherits(ILXHttpRequest, http.ClientRequest);

module.exports = ILXHttpRequest;
